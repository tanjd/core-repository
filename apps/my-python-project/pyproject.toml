[tool.coverage.run]
branch = true
source = ["my_python_project"]

[tool.coverage.report]
exclude_lines = ["if TYPE_CHECKING:"]
show_missing = true

[tool.pytest.ini_options]
addopts = "--cov --cov-report html:'../../coverage/apps/my-python-project/html' --cov-report xml:'../../coverage/apps/my-python-project/coverage.xml' --html='../../reports/apps/my-python-project/unittests/html/index.html' --junitxml='../../reports/apps/my-python-project/unittests/junit.xml'"

[tool.poetry]
name = "my-python-project"
version = "1.0.0"
description = "Automatically generated by Nx."
authors = []
license = "Proprietary"
readme = "README.md"

[[tool.poetry.packages]]
include = "my_python_project"

[tool.poetry.dependencies]
python = ">=3.9,<3.11"


[tool.poetry.dependencies.my-python-library]
path = "../../libs/my-python-library"
develop = true

[tool.poetry.group.dev.dependencies]
autopep8 = "2.0.2"
ruff = "^0.6.5"
pytest = "7.3.1"
pytest-sugar = "0.9.7"
pytest-cov = "4.1.0"
pytest-html = "3.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [".ruff_cache", ".svn", ".tox", ".venv", "dist"]

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
]
ignore = []

fixable = ["ALL"]
unfixable = []
